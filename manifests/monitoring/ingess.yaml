apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: auth-proxy
  labels:
    app: grafana
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - grafana.cluster.fun
    secretName: grafana-ingress
  rules:
  - host: grafana.cluster.fun
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: auth-proxy
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-credentials
  namespace: monitoring
  annotations:
    kube-1password: m7c2n5gqybiyxj6ylydju2nljm
    kube-1password/vault: Kubernetes
    kube-1password/password-key: auth
type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-cloud
  namespace: monitoring
  labels:
    app: prometheus-cloud
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: prometheus-credentials
    nginx.ingress.kubernetes.io/auth-secret-type: auth-file
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - prometheus-cloud.cluster.fun
    secretName: prometheus-cloud-ingress
  rules:
  - host: prometheus-cloud.cluster.fun
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: prometheus-server
            port:
              number: 80
