apiVersion: v1
kind: Service
metadata:
  name: marcusnoble
  namespace: marcusnoble
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    name: web
  selector:
    app: marcusnoble
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: marcusnoble
  namespace: marcusnoble
spec:
  replicas: 1
  selector:
    matchLabels:
      app: marcusnoble
  template:
    metadata:
      labels:
        app: marcusnoble
    spec:
      containers:
      - name: web
        image: rg.fr-par.scw.cloud/averagemarcus/marcusnoble:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: web
        resources:
          limits:
            memory: 50Mi
          requests:
            memory: 50Mi
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: web
        #   initialDelaySeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: web
        #   initialDelaySeconds: 10
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: marcusnoble
  namespace: marcusnoble
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - marcusnoble.com
    - www.marcusnoble.com
    secretName: marcusnoble-ingress
  rules:
  - host: marcusnoble.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: marcusnoble
            port:
              number: 80
  - host: www.marcusnoble.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: marcusnoble
            port:
              number: 80

---
