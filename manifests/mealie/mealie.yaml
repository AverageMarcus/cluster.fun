apiVersion: v1
kind: Secret
metadata:
  name: mealie
  namespace: mealie
  annotations:
    kube-1password: 7ibib7oafxbxkvofnd4oxcr3qy
    kube-1password/vault: Kubernetes
    kube-1password/secret-text-parse: "true"
type: Opaque

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mealie
  namespace: mealie
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mealie
  template:
    metadata:
      labels:
        app: mealie
    spec:
      containers:
      - name: frontend
        image: ghcr.io/mealie-recipes/mealie:v1.2.0
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: mealie
        env:
        # - name: API_URL
        #   value: "http://localhost:9000"
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TOKEN_TIME
          value: "168"
        - name: DB_ENGINE
          value: postgres
        - name: POSTGRES_DB
          value: mealie
        - name: RECIPE_PUBLIC
          value: "false"
        - name: RECIPE_SHOW_NUTRITION
          value: "true"
        - name: RECIPE_SHOW_ASSETS
          value: "true"
        - name: RECIPE_LANDSCAPE_VIEW
          value: "true"
        - name: RECIPE_DISABLE_COMMENTS
          value: "false"
        - name: RECIPE_DISABLE_AMOUNT
          value: "false"
        ports:
        - containerPort: 3000
          name: web
        volumeMounts:
          - mountPath: /app/data
            name: data
      # - name: api
      #   image: ghcr.io/mealie-recipes/mealie:api-nightly
      #   imagePullPolicy: Always
      #   envFrom:
      #   - secretRef:
      #       name: mealie
      #   env:
      #   - name: PUID
      #     value: "1000"
      #   - name: PGID
      #     value: "1000"
      #   - name: DB_ENGINE
      #     value: postgres
      #   - name: POSTGRES_DB
      #     value: mealie
      #   - name: DEFAULT_EMAIL
      #     value: "mealie@marcusnoble.co.uk"
      #   - name: TOKEN_TIME
      #     value: "168"
      #   - name: BASE_URL
      #     value: "https://mealie.cluster.fun"
      #   ports:
      #   - containerPort: 9000
      #     name: api
      #   volumeMounts:
      #     - mountPath: /app/data
      #       name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mealie


---

apiVersion: v1
kind: Service
metadata:
  name: mealie
  namespace: mealie
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: web
    name: web
  selector:
    app: mealie
---

apiVersion: v1
kind: Service
metadata:
  name: mealie-api
  namespace: mealie
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: api
    name: api
  selector:
    app: mealie

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mealie
  namespace: mealie
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - mealie.cluster.fun
    secretName: mealie-ingress
  rules:
  - host: mealie.cluster.fun
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: mealie
            port:
              name: web
  - host: mealie.cluster.fun
    http:
      paths:
      - path: /api
        pathType: ImplementationSpecific
        backend:
          service:
            name: mealie-api
            port:
              name: api
