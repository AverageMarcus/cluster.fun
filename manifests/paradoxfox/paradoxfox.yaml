apiVersion: v1
kind: ConfigMap
metadata:
  name: paradoxfox-prestashop
  namespace: paradoxfox
  labels:
    app.kubernetes.io/name: prestashop
    app.kubernetes.io/instance: paradoxfox
data:
  BITNAMI_DEBUG: "false"
  ALLOW_EMPTY_PASSWORD: "no"
  APACHE_HTTP_PORT_NUMBER: "8080"
  PRESTASHOP_COOKIE_CHECK_IP: "no"
  PRESTASHOP_LANGUAGE: "en"
  PRESTASHOP_SKIP_BOOTSTRAP: "no"
  PRESTASHOP_HOST: "paradoxfox.shop"
  PRESTASHOP_ENABLE_HTTPS: "true"

---

apiVersion: v1
kind: Secret
metadata:
  name: paradoxfox-prestashop
  namespace: paradoxfox
  labels:
    app.kubernetes.io/name: prestashop
    app.kubernetes.io/instance: paradoxfox
  annotations:
    kube-1password: 7clcafpfqzivl2v5feqla6rsjm
    kube-1password/vault: Kubernetes
    kube-1password/secret-text-parse: "true"
type: Opaque

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paradoxfox-prestashop
  namespace: paradoxfox
  labels:
    app.kubernetes.io/name: prestashop
    app.kubernetes.io/instance: paradoxfox
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: scw-bssd-retain

---

apiVersion: v1
kind: Service
metadata:
  name: paradoxfox-prestashop
  namespace: paradoxfox
  labels:
    app.kubernetes.io/name: prestashop
    app.kubernetes.io/instance: paradoxfox
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: prestashop
    app.kubernetes.io/instance: paradoxfox

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: paradoxfox-prestashop
  namespace: paradoxfox
  labels:
    app.kubernetes.io/name: prestashop
    app.kubernetes.io/instance: paradoxfox
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prestashop
      app.kubernetes.io/instance: paradoxfox
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prestashop
        app.kubernetes.io/instance: paradoxfox
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/bitnami-shell:11-debian-11-r23
          imagePullPolicy: "IfNotPresent"
          command:
            - sh
            - -c
            - |
              mkdir -p "/bitnami/prestashop"
              chown -R "1001:1001" "/bitnami/prestashop"
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: prestashop-data
              mountPath: /bitnami/prestashop
              subPath: prestashop
      containers:
        - name: paradoxfox-prestashop
          image: docker.io/bitnami/prestashop:1.7.8-7-debian-11-r3
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          envFrom:
            - configMapRef:
                name: paradoxfox-prestashop
            - secretRef:
                name: paradoxfox-prestashop
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: "paradoxfox.shop"
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: "paradoxfox.shop"
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 6
          resources:
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - name: prestashop-data
              mountPath: /bitnami/prestashop
              subPath: prestashop
      volumes:
        - name: prestashop-data
          persistentVolumeClaim:
            claimName: paradoxfox-prestashop

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paradoxfox-prestashop
  namespace: paradoxfox
  labels:
    app.kubernetes.io/name: prestashop
    app.kubernetes.io/instance: paradoxfox
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: "nginx"
  tls:
    - hosts:
        - paradoxfox.shop
      secretName: paradoxfox.shop-tls
  rules:
    - host: paradoxfox.shop
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: paradoxfox-prestashop
                port:
                  name: http
